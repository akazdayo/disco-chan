---
import { GetUserProfile } from "@/lib/prisma";
import { GetAvatar } from "@/components/posts/avatar";
import { Picker } from "./reactions";
import type { JsonValue } from "@prisma/client/runtime/library";

const { message, user, time, tags, postid, reactions } = Astro.props as {
	message: string;
	user: number;
	time: string;
	tags: string[];
	postid: number;
	reactions: JsonValue;
};
const userProfile = await GetUserProfile(user);
const profile = userProfile ? userProfile : null;
---

<div class="flex items-center justify-center m-2">
	<div class="bg-card rounded-lg shadow-xl w-full max-w-md p-6">
		<div class="flex items-start gap-4">
			<GetAvatar user={user} profile={profile} client:load />
			<div class="grid gap-1 flex-1">
				<div class="flex items-center gap-2">
					<div class="font-medium">{profile?.username}</div>
					<div class="text-xs text-muted-foreground">
						{time}
					</div>
				</div>
				<div class="text-sm prose">
					<p>{message}</p>
				</div>
				<div class="flex gap-2">
					{
						tags.map((tag: string) => (
							<div class="bg-muted rounded-full px-3 py-1 text-xs text-muted-foreground">
								{tag}
							</div>
						))
					}
				</div>
				<div>
					<div class="flex items-center gap-2">
						<div class="text-xs text-muted-foreground flex gap-1">
							{
								// TODO: 無理やり直したから後で直す
								typeof reactions === "object" &&
									reactions !== null &&
									!Array.isArray(reactions) &&
									Object.keys(reactions).map((userid) => {
										return (
											<p title={userid}>
												{reactions[userid]}
											</p>
										);
									})
							}
						</div>
					</div>
				</div>
			</div>
			<Picker postid={postid} client:only="react" />
		</div>
	</div>
</div>
